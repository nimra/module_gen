# Lawrence McAfee

# ~~~~~~~~ import ~~~~~~~~
from modules.node.HierNode import HierNode
from modules.node.LeafNode import LeafNode
from modules.node.Stage import Stage
from modules.node.block.CodeBlock import CodeBlock
from modules.node.block.MarkdownBlock import MarkdownBlock


# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Chapter 12   Matplotlib and Seaborn
# 
# 
# 
# 
# Figure 12-8. Boxplot with seaborn
# 
# 
# M
#  ultivariate Plots
# Common multivariate visualizations include the scatter plot and its extension the
# pairwise plot, parallel coordinate plots, and the covariance matrix plot.
# 
# 
# S
#  catter Plot
# Scatter plot exposes the relationships between two variables in a dataset. The outputs
# with matplotlib and seaborn are shown in Figure 12-9 and Figure 12-10, respectively.
# 
# #   create the dataset
# x   = np.random.sample(100)
# y   = 0.9 * np.asarray(x) + 1 + np.random.uniform(0,0.8, size=(100,))
# #   scatter plot with matplotlib
# 
# 158
# 
#                                             Chapter 12   Matplotlib and Seaborn
# 
# plt.scatter(x,y)
# plt.xlabel("x")
# plt.ylabel("y")
# plt.show()
# # scatter plot with seaborn
# sns.regplot(x=x, y=y, fit_reg=False)
# plt.xlabel("x")
# plt.ylabel("y")
# plt.show()
# 
# 
# 
# 
# Figure 12-9. Scatter plot with Matplotlib
# 
# 
# 
# 
#                                                                            159
# 
# Chapter 12   Matplotlib and Seaborn
# 
# 
# 
# 
# Figure 12-10. Scatter plot with seaborn
# 
# Pairwise Scatter Plot
# Pairwise scatter plot is an effective window for visualizing the relationships among
# multiple variables within the same plot. However, with higher-dimension datasets,
# the plot may become clogged up, so use it with care. Letâ€™s see an example of this with
# Matplotlib and seaborn.
#     Here, we will use the method scatter_matrix, one of the plotting functions in Pandas
# to graph a pairwise scatter plot matrix. The outputs with matplotlib and seaborn are
# shown in Figure 12-11 and Figure 12-12, respectively.
# 
# # create the dataset
# data = np.random.randn(1000,6)
# # using Pandas scatter_matrix
# pd.plotting.scatter_matrix(pd.DataFrame(data), alpha=0.5, figsize=(12, 12),
# diagonal='kde')
# plt.show()
# 160
# 

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
class Content(LeafNode):
    def __init__(self):
        super().__init__(
            "Scatter Plot",
            # Stage.CLEAN_TEXT,
            # Stage.CODE_BLOCKS,
            # Stage.MARKDOWN_BLOCKS,
            # Stage.FIGURES,
            # Stage.EXERCISES,
            # Stage.CUSTOMIZED,
        )
        self.add(MarkdownBlock("# Scatter Plot"))

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
class ScatterPlot(HierNode):
    def __init__(self):
        super().__init__("Scatter Plot")
        self.add(Content())

# eof
