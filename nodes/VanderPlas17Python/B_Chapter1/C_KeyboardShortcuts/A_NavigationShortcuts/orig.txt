        In [10]: str.*find*?
        str.find
        str.rfind
I find this type of flexible wildcard search can be very useful for finding a particular
command when I’m getting to know a new package or reacquainting myself with a
familiar one.

Keyboard Shortcuts in the IPython Shell
If you spend any amount of time on the computer, you’ve probably found a use for
keyboard shortcuts in your workflow. Most familiar perhaps are Cmd-C and Cmd-V
(or Ctrl-C and Ctrl-V) for copying and pasting in a wide variety of programs and sys‐
tems. Power users tend to go even further: popular text editors like Emacs, Vim, and
others provide users an incredible range of operations through intricate combina‐
tions of keystrokes.
The IPython shell doesn’t go this far, but does provide a number of keyboard short‐
cuts for fast navigation while you’re typing commands. These shortcuts are not in fact
provided by IPython itself, but through its dependency on the GNU Readline library:
thus, some of the following shortcuts may differ depending on your system configu‐
ration. Also, while some of these shortcuts do work in the browser-based notebook,
this section is primarily about shortcuts in the IPython shell.
Once you get accustomed to these, they can be very useful for quickly performing
certain commands without moving your hands from the “home” keyboard position.
If you’re an Emacs user or if you have experience with Linux-style shells, the follow‐
ing will be very familiar. We’ll group these shortcuts into a few categories: navigation
shortcuts, text entry shortcuts, command history shortcuts, and miscellaneous shortcuts.

Navigation Shortcuts
While the use of the left and right arrow keys to move backward and forward in the
line is quite obvious, there are other options that don’t require moving your hands
from the “home” keyboard position:

Keystroke                        Action
Ctrl-a                           Move cursor to the beginning of the line
Ctrl-e                           Move cursor to the end of the line
Ctrl-b (or the left arrow key)   Move cursor back one character
Ctrl-f (or the right arrow key) Move cursor forward one character




8   |    Chapter 1: IPython: Beyond Normal Python
Text Entry Shortcuts
While everyone is familiar with using the Backspace key to delete the previous char‐
acter, reaching for the key often requires some minor finger gymnastics, and it only
deletes a single character at a time. In IPython there are several shortcuts for remov‐
ing some portion of the text you’re typing. The most immediately useful of these are
the commands to delete entire lines of text. You’ll know these have become second
nature if you find yourself using a combination of Ctrl-b and Ctrl-d instead of reach‐
ing for the Backspace key to delete the previous character!

Keystroke     Action
Backspace key Delete previous character in line
Ctrl-d           Delete next character in line
Ctrl-k           Cut text from cursor to end of line
Ctrl-u           Cut text from beginning fo line to cursor
Ctrl-y           Yank (i.e., paste) text that was previously cut
Ctrl-t           Transpose (i.e., switch) previous two characters


Command History Shortcuts
Perhaps the most impactful shortcuts discussed here are the ones IPython provides
for navigating the command history. This command history goes beyond your cur‐
rent IPython session: your entire command history is stored in a SQLite database in
your IPython profile directory. The most straightforward way to access these is with
the up and down arrow keys to step through the history, but other options exist as
well:

Keystroke                         Action
Ctrl-p (or the up arrow key)      Access previous command in history
Ctrl-n (or the down arrow key) Access next command in history
Ctrl-r                            Reverse-search through command history

The reverse-search can be particularly useful. Recall that in the previous section we
defined a function called square. Let’s reverse-search our Python history from a new
IPython shell and find this definition again. When you press Ctrl-r in the IPython
terminal, you’ll see the following prompt:
     In [1]:
     (reverse-i-search)`':
If you start typing characters at this prompt, IPython will auto-fill the most recent
command, if any, that matches those characters:



                                                                           Keyboard Shortcuts in the IPython Shell   |   9
