CHAPTER 30



TensorFlow 2.0 and Keras
TensorFlow (TF) is a specialized numerical computation library for deep learning. It is
the preferred tool by numerous deep learning researchers and industry practitioners for
developing deep learning models and architectures as well as for serving learned models
into production servers and software products. This chapter is focused on TensorFlow 2.0.



Navigating Through the TensorFlow API
Understanding the different levels of the TF API hierarchy is critical to working
effectively with TF. The task of building a TF deep learning model may be addressed
via different TF API levels. An understanding of the API hierarchy provides clarity on
implementing neural network models with TF as well as navigating the TF ecosystem.
The TF API hierarchy is primarily composed of three API levels, the high-level API, the
mid-level API which provides components for building neural network models, and the
low-level API. A diagrammatic representation of this is shown in Figure 30-1.




                                                                                          347
Â© Ekaba Bisong 2019
E. Bisong, Building Machine Learning and Deep Learning Models on Google Cloud Platform,
https://doi.org/10.1007/978-1-4842-4470-8_30
Chapter 30   TensorFlow 2.0 and Keras




Figure 30-1. TensorFlow API hierarchy


The Low-Level TensorFlow APIs
The low-level API gives the tools for building network graphs from the ground up using
mathematical operations. This API level affords the greatest level of flexibility to tweak
and tune the model as desired. Moreover, the higher-level APIs implement low-level
operations under the hood.


The Mid-Level TensorFlow APIs
TensorFlow provides a set of reusable packages for simplifying the process involved in
creating neural network models. Some examples of these functions include the layers
(tf.keras.layers), Datasets (tf.data), metrics (tf.keras.metrics), loss (tf.keras.losses),
and FeatureColumns (tf.feature_column) packages.

L ayers
The layers package (tf.keras.layers) provides a handy set of functions to simplify the
construction of layers in a neural network architecture. For example, consider the
convolutional network architecture in Figure 30-2 and how the layers API simplifies the
creation of the network layers.



348
