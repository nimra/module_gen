CHAPTER 42



Google AutoML:
Cloud Vision
Google Cloud AutoML Vision facilitates the creation of custom vision models for image
recognition use cases. This managed service works with the concepts of transfer learning
and neural architecture search under the hood to find the best network architecture
and the optimal hyper-parameter configuration of that architecture that minimizes the
loss function of the model. This chapter will go through a sample project of building a
custom image recognition model using Google Cloud AutoML Vision. In this chapter, we
will build an image model to recognize select cereal boxes.



Enable AutoML Cloud Vision on GCP
Step through the following steps to enable AutoML Cloud Vision on GCP:

       1. Open Cloud Vision by clicking the triple dash at the top-left corner
          of the GCP dashboard. Select Vision under the product section
          ARTIFICIAL INTELLIGENCE as shown in Figure 42-1.




                                                                                          581
© Ekaba Bisong 2019
E. Bisong, Building Machine Learning and Deep Learning Models on Google Cloud Platform,
https://doi.org/10.1007/978-1-4842-4470-8_42
Chapter 42   Google AutoML: Cloud Vision




Figure 42-1. Open Google AutoML: Cloud Vision

      2. Select the Google user account on which to activate AutoML as
         shown in Figures 42-2 and 42-3.




Figure 42-2. Select account to authenticate AutoML
582
                                              Chapter 42   Google AutoML: Cloud Vision




Figure 42-3. Authenticate AutoML

     3. After authentication, the Google Cloud Vision Welcome page
        opens up (see Figure 42-­4).




Figure 42-4. Cloud Vision Welcome page


                                                                                  583
Chapter 42   Google AutoML: Cloud Vision

      4. From the drop-down menu, select the Project ID (with billing
         enabled) that will be used to set up AutoML (see Figure 42-5).




Figure 42-5. Select Project ID for configuring AutoML

      5. The final configuration step is to enable the AutoML API on the
         GCP project and to create a GCS bucket for storing the output
         models. Click ‘SET UP NOW’ to automatically complete the
         configuration as shown in Figure 42-6.




584
                                              Chapter 42   Google AutoML: Cloud Vision




Figure 42-6. Automatically complete AutoML configuration

     6. When the configuration is complete, the AutoML Vision
        Dashboard is activated (see Figure 42-7).




Figure 42-7. Automatically complete AutoML configuration


                                                                                  585
Chapter 42     Google AutoML: Cloud Vision


Preparing the Training Dataset
Before building a custom image recognition model with AutoML Cloud Vision, the
dataset must be prepared in a particular format; they include

      1. For training, JPEG, PNG, WEBP, GIF, BMP, TIFF, and ICO image
         formats are supported with a maximum size of 30mb per image.

      2. For inference, the image formats JPEG, PNG, and GIF are
         supported with each image being of maximum size 1.5mb.

      3. It is best to place each image category into containing sub-folder
         within an image folder For example:

         •      [image-directory]

               •   [image-class-1-dir]

               •   [image-class-2-dir]

               •   …

               •   [image-class-n-dir]

      4. Next, a CSV must be created that points to the paths of the images
         and their corresponding label. AutoML uses the CSV file to point
         to the location of the training images and their labels. The CSV
         file is placed in the same GCS bucket containing the image files.
         Use the bucket automatically created when AutoML Vision was
         configured. In our case, this bucket is named ‘gs://quantum-ally-
         219323-vcm’. We use the following code segment to create the CSV
         file used in the cereal classifier example.

             import os
             import numpy as np
             import pandas as pd

             directory = 'cereal_photos/

             data = []

             # go through sub-directories in the image directory and get the
             image paths

586
